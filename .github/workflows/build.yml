name: build
on: push

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Soldat game
        run: |
          mkdir soldat
          wget 'https://github.com/opensoldat/opensoldat/releases/download/continuous/linux-appimage.zip'
          unzip linux-appimage.zip
          mv opensoldat-continuous-*-x86_64.AppImage soldat/opensoldat
          chmod +x soldat/opensoldat
          rm linux-appimage.zip
          wget 'https://github.com/opensoldat/opensoldat/releases/download/continuous/linux-server-only-appimage.zip'
          unzip linux-server-only-appimage.zip
          mv opensoldatserver-continuous-*-x86_64.AppImage soldat/opensoldatserver
          chmod +x soldat/opensoldatserver
          rm linux-server-only-appimage.zip

      - name: Install packages
        run: npm ci

      - name: Build launcher
        run: npm run make

      - uses: actions/upload-artifact@v2
        with:
          name: soldat-launcher-linux
          path: out/make/zip/linux/x64/

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Soldat game
        run: |
          curl --remote-name --location 'https://github.com/opensoldat/opensoldat/releases/download/continuous/windows-build.zip'
          unzip windows-build.zip
          mv windows-build soldat
          rm windows-build.zip

      - name: Install packages
        run: npm ci

      - name: Build launcher
        run: npm run make

      - uses: actions/upload-artifact@v2
        with:
          name: soldat-launcher-windows
          path: out/make/zip/win32/x64/

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Soldat game
        run: |
          curl --remote-name --location 'https://github.com/DeathByDenim/soldat/releases/download/continuous/macos-build.zip'
          unzip macos-build.zip
          mv macos-build soldat
          rm macos-build.zip

      - name: Install packages
        run: npm ci

      - name: Build launcher
        run: npm run make

      - uses: actions/upload-artifact@v2
        with:
          name: soldat-launcher-macos
          path: out/make/zip/darwin/x64/

  continuous:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [linux, windows, macos]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Zip build dirs back together
        run: |
          zip -r soldat-launcher-linux.zip soldat-launcher-linux
          zip -r soldat-launcher-macos.zip soldat-launcher-macos
          zip -r soldat-launcher-windows.zip soldat-launcher-windows
      #- name: Chmod and zip AppImages
        #run: |
          #cd appimages
          #chmod u+x *.AppImage
          #zip linux-appimage.zip opensoldat-*.AppImage
          #zip linux-server-only-appimage.zip opensoldatserver-*.AppImage
          #mv linux-appimage.zip linux-server-only-appimage.zip ..
      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: continuous
          files: |
            soldat-launcher-linux.zip
            soldat-launcher-macos.zip
            soldat-launcher-windows.zip
          body: These are updated on every push
          name: Continuous build
